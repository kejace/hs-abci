language: haskell
ghc:
  - "8.6.1"
cabal: "2.4"
sudo: required

services:
- docker

# Cache .stack for build_times--
addons:
  apt:
    sources:
    - sourceline: 'ppa:tah83/secp256k1'
    packages:
    - libsecp256k1-dev

cache:
  directories:
  - $HOME/.stack

before_install:
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
# From https://github.com/google/proto-lens/blob/5ab25dfeb51f700204db4aa8a9e7fbc5a74ed1e9/.travis.yml#L41-L44
- curl -L https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-x86_64.zip > protoc-release.zip
- unzip -p protoc-release.zip bin/protoc > $HOME/.local/bin/protoc
- chmod a+x $HOME/.local/bin/protoc
- rm protoc-release.zip
install:
- travis_wait 120 stack --skip-ghc-check setup

jobs:
  include:
  - name: "Test Libraries"
    script: make test-libraries
  - name: "Test Libraries with Nix"
    script:
    - echo "This stage is currently disabled as Nix doesn't seem to play well with libsecp256k1"
    #- curl https://nixos.org/nix/install | sh
    #- source $HOME/.nix-profile/etc/profile.d/nix.sh && stack --nix test hs-abci-types hs-abci-server hs-abci-sdk
  - name: "Test IAVL Client"
    script:
    - docker run -p 8090:8090 -p 8091:8091 -d foamspace/iavl:latest /iavlserver  -db-name "test" -datadir "."  -grpc-endpoint "0.0.0.0:8090"  -gateway-endpoint "0.0.0.0:8091"
    - make test-iavl-client
  - name: "Test Tendermint Client"
    script:
    - docker-compose -f hs-tendermint-client/docker-compose.yaml -p test-hs-tendermint-client up -d
    - make test-kv-store
    - docker-compose -f hs-tendermint-client/docker-compose.yaml -p test-hs-tendermint-client down -v --rmi local
  - name: "Test SimpleStorage Example E2E"
    script:
    - make docker-test-prebake
    - docker-compose -f hs-abci-examples/simple-storage/docker-compose.yaml -p test-hs-abci-examples-simple-storage-e2e up -d
    - make test-simple-storage
    - docker-compose -f hs-abci-examples/simple-storage/docker-compose.yaml -p test-hs-abci-examples-simple-storage-e2e down -v --rmi local
  - name: "Test Nameservice Example E2E"
    script:
    - make docker-test-prebake
    - docker-compose -f hs-abci-examples/nameservice/docker-compose.yaml -p test-hs-abci-examples-nameservice-e2e up -d
    - make test-nameservice
    - docker-compose -f hs-abci-examples/nameservice/docker-compose.yaml -p test-hs-abci-examples-nameservice-e2e down -v --rmi local
  - name: "Test Nameservice Tutorial"
    script:
    - travis_wait 120 stack --skip-ghc-check install markdown-unlit-0.5.0
    - make test-tutorial
  - name: "Ensure that code matches style guidelines"
    # When branch is `master` we run `haskell-stylish` and fail if git working directory becomes dirty
    if: branch = master
    script:
    - travis_wait 120 stack --skip-ghc-check install hlint-2.1.26 stylish-haskell-0.9.4.3 weeder-1.0.8
    - make stylish && git diff-index --quiet HEAD
    - make hlint
    - make weeder
  - name: "Build docs and push to github pages"
    if: branch = master
  - script:
    - cd docs
    - find . -type f -name "*.md" -exec sed -i '' -e 's/.*~~~.*/```/g' {} +
    - JEKYLL_ENV=production bundle exec jekyll build --destination _site

deploy:
  provider: pages
  local-dir: ./docs/_site
  target-branch: master
  email: deploy@travis-ci.org
  name: Deployment Bot
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  keep-history: true
  on:
    branch: master
